<?php

namespace App\Tests\Controller;

use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;
use Symfony\Component\HttpFoundation\File\UploadedFile;

class VolCertsRESTAPITest extends WebTestCase
{
    const VHX = '/var/www/volcerts.vhx.cloud/tests/var';
    const LCL = '/Users/rick/Sites/AYSO/_dev/volcerts/tests/var';

    /**
     * @var string
     */
    private string $var;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        switch ($_SERVER['HOME']) {
            case "/home/vagrant":
                $this->var = self::VHX;
                break;
            default:
                $this->var = self::LCL;
        }
    }

    public function xtestJSONUpload()
    {
        $client = static::createClient();

        copy($this->var . '/files/ver1.csv', $this->var . '/uploads/ver1.csv');
        $file = new UploadedFile(
            $this->var . '/uploads/ver1.csv',
            'ver1.csv',
            'text/csv',
            null
        );

        $client->request(
            'GET',
            '/json/',
            [],
            ['uploadFilename' => $file]
        );

        $this->assertEquals(301, $client->getResponse()->getStatusCode());
        $this->assertStringContainsString('"AYSOID":51236056', $client->getResponse()->getContent());
        $this->assertStringContainsString('"FullName":"Jorge Benitez"', $client->getResponse()->getContent());
        $this->assertStringContainsString('"CoachCertDesc":"U-10 Coach"', $client->getResponse()->getContent());
        $this->assertStringContainsString('"CoachCertDate":"2002-07-13"', $client->getResponse()->getContent());
    }

    public function xtestBadUpload()
    {
        $client = static::createClient();

        copy($this->var . '/files/Book.3.bad.csv', $this->var . '/uploads/Book.3.bad.csv');
        $file = new UploadedFile(
            $this->var . '/uploads/Book.3.bad.csv',
            'Book.3.bad.csv',
            'text/csv',
            null
        );

        $client->request(
            'POST',
            '/json',
            [],
            ['uploadFilename' => $file]
        );

        $this->assertEquals(404, $client->getResponse()->getStatusCode());
        $this->assertStringContainsString('not found', $client->getResponse()->getContent());
    }

}
